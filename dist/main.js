(()=>{"use strict";class t{constructor(t){this.length=t,this.hits=0}hit(){this.hits++}isSunk(){return this.hits>=this.length}}class s{constructor(){this.missedAttacks=[],this.ships=[],this.board=this.createBoard()}createBoard(){let t=[];for(let s=0;s<10;s++){t.push([]);for(let e=0;e<10;e++)t[s].push({index:[e+1,s+1],ship:null,hit:null})}return t}getBoard(){return this.board}getPeice(t,s){return this.board[t][s]}placeShip(s,e,i,h){if(e<0||e>9||i<0||i>9)return;let r=new t(s);if(this.ships.push(r),"up"==h)for(let t=e;t<s+e;t++)this.getBoard()[e][t+1].ship=r;else for(let t=e;t<s+e;t++)this.getBoard()[t][i].ship=r}receiveAttack(t,s){this.getBoard()[t][s].ship?(this.getBoard()[t][s].ship.hit(),this.getBoard()[t][s].hit=!0):(this.missedAttacks.push([t,s]),this.getBoard()[t][s].hit="miss")}allShipsSunk(){let t=!0;for(let s of this.ships)s.isSunk()||(t=!1);return t}}class e{constructor(t){this.name=t,this.turn=!0}attack(t,s,e){!0===this.turn&&(e.receiveAttack(t,s),this.turn=!1)}}const i=new e("louis"),h=(new class extends e{constructor(t){super(t)}}("computer"),new s,new s);h.placeShip(3,1,1,"up"),h.placeShip(2,5,6,"up"),h.placeShip(1,8,6,"down"),i.attack(1,2,h),console.log(h.getBoard()),console.log(h.allShipsSunk()),console.log(h.ships)})();