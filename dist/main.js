(()=>{"use strict";class t{constructor(t){this.length=t,this.hits=0}hit(){this.hits++}isSunk(){return this.hits>=this.length}}const s=new t(5);console.log(s.length);const i=new class{constructor(){this.missedAttacks=[],this.ships=[],this.board=this.createBoard()}createBoard(){let t=[];for(let s=0;s<10;s++){t.push([]);for(let i=0;i<10;i++)t[s].push({index:[i+1,s+1],ship:null,hit:null})}return t}getBoard(){return this.board}getPeice(t,s){return this.board[t][s]}placeShip(s,i,e,h){if(i<0||i>9||e<0||e>9)return;let r=new t(s);if(this.ships.push(r),this.getBoard()[i][e].ship=!0,"up"==h)for(let t=i;t<s+i;t++)this.getBoard()[i][t+1].ship=r;else for(let t=i;t<s+i;t++)this.getBoard()[t][e].ship=r}receiveAttack(t,s){this.getBoard()[t][s].ship?(this.getBoard()[t][s].ship.hit(),this.getBoard()[t][s].hit=!0):(this.missedAttacks.push([t,s]),this.getBoard()[t][s].hit="miss")}allShipsSunk(){let t=!0;for(let s of this.ships)s.isSunk()||(t=!1);return t}};i.placeShip(4,5,6,"up"),i.placeShip(2,1,4,"down");const e=new class{constructor(t){this.name=t,this.turn=!0}attack(t,s,i){!0===this.turn&&i.receiveAttack(t,s)}};e.attack(5,5,i),e.attack(5,6,i),e.attack(5,7,i),e.attack(5,8,i),console.log(i.getBoard()),console.log(i.allShipsSunk()),console.log(i.ships)})();